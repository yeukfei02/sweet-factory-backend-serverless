### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Cities {
  area: String
  city_name: String
  created_at: String
  id: Int
  updated_at: String
  zone: Zones
}

input CreateCitiesInput {
  area: String!
  city_name: String!
  zone_id: Int!
}

type CreateCitiesResult {
  message: String!
}

input CreateMachinesInput {
  city_id: Int!
  machine_name: String!
  serial_number: Int!
}

type CreateMachinesResult {
  message: String!
}

input CreateProductsInput {
  city_id: Int!
  machine_id: Int!
  price: Float!
  product_description: String!
  product_name: String!
  quantity: Int!
}

type CreateProductsResult {
  message: String!
}

input CreateZonesInput {
  zone_name: String!
}

type CreateZonesResult {
  message: String!
}

type GetCitiesResult {
  cities: [Cities]
  message: String!
}

type GetCityByIdResult {
  city: Cities
  message: String!
}

type GetMachineByIdResult {
  machine: Machines
  message: String!
}

type GetMachinesResult {
  machines: [Machines]
  message: String!
}

type GetProductByIdResult {
  message: String!
  product: Products
}

type GetProductsResult {
  message: String!
  products: [Products]
}

type GetUsersByIdResult {
  message: String!
  user: Users
}

type GetUsersResult {
  message: String!
  users: [Users]
}

type GetZonesByIdResult {
  message: String!
  zone: Zones
}

type GetZonesResult {
  message: String!
  zones: [Zones]
}

input LoginInput {
  email: String!
  password: String!
}

type LoginResult {
  message: String!
  token: String
  user_id: Int
}

type Machines {
  city: Cities
  created_at: String
  id: Int
  machine_name: String
  products: [Products]
  serial_number: Int
  updated_at: String
}

type Mutation {
  createCities(input: CreateCitiesInput!): CreateCitiesResult!
  createMachines(input: CreateMachinesInput!): CreateMachinesResult!
  createProducts(input: CreateProductsInput!): CreateProductsResult!
  createZones(input: CreateZonesInput!): CreateZonesResult!
  login(input: LoginInput!): LoginResult!
  signup(input: SignupInput!): SignupResult!
}

type Products {
  city: Cities
  created_at: String
  id: Int
  machine: Machines
  price: Float
  product_description: String
  product_name: String
  quantity: Int
  updated_at: String
}

type Query {
  getCities: GetCitiesResult!
  getCityById(id: Int): GetCityByIdResult!
  getMachineById(id: Int): GetMachineByIdResult!
  getMachines: GetMachinesResult!
  getProductById(id: Int): GetProductByIdResult!
  getProducts: GetProductsResult!
  getUserById(id: Int): GetUsersByIdResult!
  getUsers: GetUsersResult!
  getZoneById(id: Int): GetZonesByIdResult!
  getZones: GetZonesResult!
}

input SignupInput {
  email: String!
  password: String!
}

type SignupResult {
  message: String!
}

type Users {
  created_at: String
  email: String
  id: Int
  password: String
  updated_at: String
}

type Zones {
  cities: [Cities]
  created_at: String
  id: Int
  updated_at: String
  zone_name: String
}
